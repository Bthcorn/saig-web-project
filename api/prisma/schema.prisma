// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  username String
  password String
  role     String @default("GUEST")
  // Review   Review[]
}

// Board Game
model BoardGame {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  name                 String
  description          String
  image                String
  minPlayers           Int
  maxPlayers           Int
  // minAge               Int
  duration             Int
  difficulty           Int
  price                Int
  status               String              @default("AVAILABLE")
  BoardGame_Category   BoardGame_Category? @relation(fields: [boardGame_CategoryId], references: [id])
  boardGame_CategoryId String?             @db.ObjectId
}

model BoardGame_Category {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  boardGames BoardGame[]
}

// room for playing games
model Room {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  image       String
  // location    String
  capacity    Int
  price       Int
  // reviews     Review[]
}

// model Review {
//   id          String     @id @default(auto()) @map("_id") @db.ObjectId
//   rating      Int
//   comment     String
//   userId      String     @db.ObjectId
//   user        User       @relation(fields: [userId], references: [id])
//   BoardGame   BoardGame? @relation(fields: [boardGameId], references: [id])
//   boardGameId String?    @db.ObjectId
// }
